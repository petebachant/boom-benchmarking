# This script was automatically generated by Calkit

import calkit


# Load ZTF alerts into the database
import glob
import fastavro
from tqdm.auto import tqdm


def ra_to_longitude(ra):
    """Convert RA (0-360) to longitude (-180 to 180)."""
    if ra > 180:
        return ra - 360
    else:
        return ra


ztf_avro_fpaths = glob.glob("data/ztf_public_20250614/*.avro")

print(f"Found {len(ztf_avro_fpaths)} ZTF alerts")

print("Converting to documents")
documents = []
for alert_avro_fpath in tqdm(ztf_avro_fpaths):
    with open(alert_avro_fpath, "rb") as f:
        reader = fastavro.reader(f)
        for alert in reader:
            alert_fmt = {
                "object_id": alert["objectId"],
                "cand_id": alert["candid"],
                "candidate": alert["candidate"],
                # Coordinates are a GeoJSON object
                "coordinates": {
                    "type": "Point",
                    "coordinates": [
                        ra_to_longitude(alert["candidate"]["ra"]),
                        alert["candidate"]["dec"],
                    ],
                },
            }
            documents.append(alert_fmt)
# This line intentionally left blank
calkit.save_notebook_stage_out(documents, stage_name='ztf-avro-to-mongo-docs', out_name='documents')
